{"version":3,"sources":["components/renameRoomModal.js","components/Modal.js","components/RoomList.js","components/MessageList.js","components/user.js","App.js","serviceWorker.js","index.js"],"names":["RenameRoom","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","visible","setState","_this2","react_default","a","createElement","className","onClick","openRenameModal","lib_default","width","height","effect","onClickAway","closeRenameModal","onSubmit","e","renameRoom","roomID","type","placeholder","name","value","newRoomName","onChange","handleChange","Component","NewRoomModal","openNewRoomModal","closeNewRoomModal","createRoom","RoomList","rooms","roomsRef","firebase","database","ref","on","snapshot","room","val","key","concat","deleteRoom","filter","console","log","renamedRoom","map","preventDefault","push","target","child","remove","setActiveRoom","update","_this3","Modal","bind","index","window","confirm","renameRoomModal","MessageList","messages","newMessage","messagesRef","message","content","activeRoomID","sentAt","ServerValue","TIMESTAMP","username","user","displayName","createMessage","_this4","dist_default","date","showMessageBar","User","usernameRef","auth","onAuthStateChanged","setUser","provider","GoogleAuthProvider","signInWithPopup","then","result","token","credential","accessToken","signOut","error","googleSignin","googleSignout","showButton","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","App","activeRoom","components_user","components_RoomList","components_MessageList","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76f1aad6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Modal from \"react-awesome-modal\";\n\nclass RenameRoom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n  }\n\n  openRenameModal() {\n    this.setState({\n      visible: true\n    });\n  }\n\n  closeRenameModal() {\n    this.setState({\n      visible: false\n    });\n  }\n\n  render() {\n    return (\n      <section>\n        <span className=\"rename-text\" onClick={() => this.openRenameModal()}>\n          Rename\n        </span>\n        <Modal\n          visible={this.state.visible}\n          width=\"400\"\n          height=\"300\"\n          effect=\"fadeInUp\"\n          onClickAway={() => this.closeRenameModal()}\n        >\n          <div className=\"modal-form\">\n            <form\n              onSubmit={e =>\n                this.props.renameRoom(e, this.props.roomID) +\n                this.closeRenameModal()\n              }\n            >\n              <h2>Rename This Room</h2>\n              <input\n                type=\"text\"\n                className=\"modal-input\"\n                placeholder={this.props.roomID.name}\n                value={this.state.newRoomName}\n                onChange={e => this.props.handleChange(e)}\n              />\n              <button type=\"submit\">Rename</button>\n            </form>\n          </div>\n        </Modal>\n      </section>\n    );\n  }\n}\nexport default RenameRoom;\n","import React, { Component } from \"react\";\nimport Modal from \"react-awesome-modal\";\n\nclass NewRoomModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n  }\n\n  openNewRoomModal() {\n    this.setState({\n      visible: true\n    });\n  }\n\n  closeNewRoomModal() {\n    this.setState({\n      visible: false\n    });\n  }\n\n  render() {\n    return (\n      <section>\n        <button type=\"submit\" onClick={() => this.openNewRoomModal()}>\n          Create New Room\n        </button>\n        <Modal\n          visible={this.state.visible}\n          width=\"400\"\n          height=\"300\"\n          effect=\"fadeInUp\"\n          onClickAway={() => this.closeNewRoomModal()}\n        >\n          <div className=\"modal-form\">\n            <form\n              onSubmit={e =>\n                this.props.createRoom(e) + this.closeNewRoomModal()\n              }\n            >\n              <h2>Create A New Room</h2>\n              <input\n                type=\"text\"\n                className=\"modal-input\"\n                placeholder=\"New Room Name\"\n                onChange={e => this.props.handleChange(e)}\n              />\n              <button type=\"submit\">Create!</button>\n            </form>\n          </div>\n        </Modal>\n      </section>\n    );\n  }\n}\n\nexport default NewRoomModal;\n","import React, { Component } from \"react\";\n//import Modal from \"react-awesome-modal\";\nimport \"./roomList.css\";\nimport RenameRoom from \"./renameRoomModal\";\nimport NewRoomModal from \"./Modal\";\n\nclass RoomList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rooms: [],\n      newRoomName: \"\"\n    };\n\n    this.roomsRef = this.props.firebase.database().ref(\"rooms\");\n  }\n\n  componentDidMount() {\n    this.roomsRef.on(\"child_added\", snapshot => {\n      const room = snapshot.val();\n      room.key = snapshot.key;\n      this.setState({ rooms: this.state.rooms.concat(room) });\n    });\n\n    this.roomsRef.on(\"child_removed\", snapshot => {\n      const deleteRoom = snapshot.val();\n      deleteRoom.key = snapshot.key;\n      this.setState({\n        rooms: this.state.rooms.filter(room => room.key !== deleteRoom.key)\n      });\n      console.log(\"Child_removed ran\");\n    });\n\n    this.roomsRef.on(\"child_changed\", snapshot => {\n      const renamedRoom = snapshot.val();\n      renamedRoom.key = snapshot.key;\n      this.setState({\n        rooms: this.state.rooms.map(room => {\n          if (room.key === renamedRoom.key) {\n            return renamedRoom;\n          } else {\n            return room;\n          }\n        })\n      });\n      console.log(\"Child_changed ran\");\n    });\n  }\n\n  componentDidUpdate() {\n    console.log(this.state);\n  }\n\n  createRoom(e) {\n    e.preventDefault();\n    if (!this.state.newRoomName) {\n      return;\n    }\n    this.roomsRef.push({\n      name: this.state.newRoomName\n    });\n    this.setState({ newRoomName: \"\" });\n  }\n\n  handleChange(e) {\n    this.setState({ newRoomName: e.target.value });\n    console.log(this.state.newRoomName);\n  }\n\n  deleteRoom(e, roomID) {\n    e.preventDefault();\n    this.roomsRef.child(roomID.key).remove();\n    this.props.setActiveRoom(\"\");\n  }\n\n  renameRoom(e, roomID) {\n    e.preventDefault();\n    this.roomsRef.child(roomID.key).update({ name: this.state.newRoomName });\n    this.setState({ newRoomName: \"\" });\n  }\n\n  render() {\n    return (\n      <div className=\"RoomList-section\">\n        <h1>Script[it]</h1>\n        <NewRoomModal\n          newRoomName={this.state.newRoomName}\n          handleChange={this.handleChange.bind(this)}\n          createRoom={this.createRoom.bind(this)}\n        />\n        <div className=\"new-room-modal\" />\n        {this.state.rooms.map((roomID, index) => (\n          <div key={index}>\n            <div\n              className=\"Room-name\"\n              onClick={e => this.props.setActiveRoom(roomID)}\n            >\n              {roomID.name}{\" \"}\n            </div>\n            <div className=\"delete-rename\">\n              <span\n                className=\"Delete-text\"\n                onClick={e => {\n                  if (\n                    window.confirm(\"Are you sure you wish to delete this room?\")\n                  )\n                    this.deleteRoom(e, roomID);\n                }}\n              >\n                Delete\n              </span>\n              <span className=\"inline-block\">{\" / \"}</span>\n              <div className=\"rename-room-modal\">\n                <RenameRoom\n                  newRoomName={this.state.newRoomName}\n                  handleChange={this.handleChange.bind(this)}\n                  renameRoom={this.renameRoom.bind(this)}\n                  roomID={roomID}\n                />\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\nexport default RoomList;\n","import React, { Component } from \"react\";\nimport \"./messageList.css\";\nimport Moment from \"react-moment\";\nclass MessageList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      messages: [],\n      newMessage: \"\"\n    };\n\n    this.messagesRef = this.props.firebase.database().ref(\"messages\");\n  }\n\n  componentDidMount() {\n    this.messagesRef.on(\"child_added\", snapshot => {\n      const message = snapshot.val();\n      message.key = snapshot.key;\n      this.setState({\n        messages: this.state.messages.concat(message)\n      });\n    });\n  }\n\n  createMessage(e) {\n    e.preventDefault();\n    if (!this.state.messages) {\n      return;\n    }\n\n    this.messagesRef.push({\n      content: this.state.newMessage,\n      roomID: this.props.activeRoomID.key,\n      sentAt: this.props.firebase.database.ServerValue.TIMESTAMP,\n      username: this.props.user ? this.props.user.displayName : \"Guest\"\n    });\n    this.setState({ newMessage: \"\" });\n  }\n\n  handleChange(e) {\n    this.setState({ newMessage: e.target.value });\n  }\n\n  showMessageBar() {\n    if (this.props.activeRoomID.name !== this.props.activeRoomID.key) {\n      return (\n        <form onSubmit={e => this.createMessage(e)}>\n          <input\n            type=\"text\"\n            name=\"new-message\"\n            placeholder=\"Write your message here...\"\n            value={this.state.newMessage}\n            onChange={e => this.handleChange(e)}\n          />\n          <button className=\"Message-Button\" type=\"submit\">\n            Send\n          </button>\n        </form>\n      );\n    } else return;\n  }\n\n  render() {\n    return (\n      <div className=\"Message-List\">\n        <div className=\"MessagesInRoom\">\n          <h2>\n            {this.props.activeRoomID\n              ? this.props.activeRoomID.name\n              : \"Choose a Room\"}\n          </h2>\n          {this.state.messages\n            .filter(message => message.roomID === this.props.activeRoomID.key)\n            .map(message => (\n              <ul className=\"Message-content\" key={message.key}>\n                <li>\n                  <b>{message.username}:</b> {message.content}{\" \"}\n                  <span className=\"message-date\">\n                    <Moment date={message.sentAt} />\n                  </span>\n                </li>\n              </ul>\n            ))}\n        </div>\n        <div className=\"CreateNewMessage\">{this.showMessageBar()}</div>\n      </div>\n    );\n  }\n}\n\nexport default MessageList;\n","import React, { Component } from \"react\";\n\nclass User extends Component {\n  constructor(props) {\n    super(props);\n\n    this.usernameRef = this.props.firebase.database().ref(\"username\");\n  }\n\n  componentDidMount() {\n    this.props.firebase.auth().onAuthStateChanged(user => {\n      this.props.setUser(user);\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.setUser = null;\n  }\n\n  googleSignin() {\n    const provider = new this.props.firebase.auth.GoogleAuthProvider();\n    this.props.firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(function(result) {\n        var token = result.credential.accessToken;\n        var user = result.user;\n\n        console.log(token);\n        console.log(user);\n      });\n  }\n\n  googleSignout() {\n    this.props.firebase\n      .auth()\n      .signOut()\n\n      .then(\n        function() {\n          console.log(\"Signout Succesfull\");\n        },\n        function(error) {\n          console.log(\"Signout Failed\");\n        }\n      );\n  }\n\n  showButton(user) {\n    if (this.props.user === null) {\n      return (\n        <button className=\"sign-in\" onClick={() => this.googleSignin(this)}>\n          Sign In\n        </button>\n      );\n    } else\n      return (\n        <button className=\"sign-out\" onClick={() => this.googleSignout(this)}>\n          Sign Out\n        </button>\n      );\n  }\n  render() {\n    return (\n      <div className=\"sign-in-out\">\n        {this.showButton()}\n        <h4>\n          Hello, {this.props.user ? this.props.user.displayName : \"Guest\"}\n        </h4>\n      </div>\n    );\n  }\n}\nexport default User;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport * as firebase from \"firebase\";\nimport RoomList from \"./components/RoomList\";\nimport MessageList from \"./components/MessageList\";\nimport User from \"./components/user\";\n//import Popup from \"./components/Modal\";\n\n// Initialize Firebase\nvar config = {\n  apiKey: \"AIzaSyDvi7hoqxwVeCwFOEpzh5oSP09f0Ryk07Q\",\n  authDomain: \"c-bloc-chat.firebaseapp.com\",\n  databaseURL: \"https://c-bloc-chat.firebaseio.com\",\n  projectId: \"c-bloc-chat\",\n  storageBucket: \"c-bloc-chat.appspot.com\",\n  messagingSenderId: \"271758643817\"\n};\nfirebase.initializeApp(config);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeRoom: \"\",\n      user: null,\n      message: \"\",\n      visible: false\n    };\n  }\n  setActiveRoom(roomID) {\n    this.setState({ activeRoom: roomID });\n    console.log(this.state.activeRoom);\n  }\n\n  setUser(username) {\n    this.setState({ user: username });\n    //console.log(this.state.user);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <User\n            firebase={firebase}\n            user={this.state.user}\n            setUser={username => this.setUser(username)}\n          />\n        </header>\n        <aside className=\"room-list\">\n          <RoomList\n            firebase={firebase}\n            setActiveRoom={this.setActiveRoom.bind(this)}\n            activeRoomID={this.state.activeRoom}\n          />\n        </aside>\n        <main className=\"message-list\">\n          <MessageList\n            firebase={firebase}\n            activeRoomID={this.state.activeRoom}\n            user={this.state.user}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}